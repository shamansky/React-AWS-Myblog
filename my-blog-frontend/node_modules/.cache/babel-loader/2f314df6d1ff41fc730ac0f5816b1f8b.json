{"ast":null,"code":"var _jsxFileName = \"/Users/georgeciurescu/Projects/React/my-blog/my-blog-frontend/src/pages/ArticlePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport ArticlesList from \"../components/ArticlesList\";\nimport CommentsList from \"../components/CommentsList\";\nimport AddCommentForm from \"../components/AddCommentForm\";\nimport UpvotesSection from \"../components/UpvotesSection\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport articleContent from \"./article-content\";\n\nconst ArticlePage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n\n    fetchData();\n  }, [name]);\n  if (!article) return /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 24\n    }\n  });\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, article.title), /*#__PURE__*/React.createElement(UpvotesSection, {\n    articleName: name,\n    upvotes: articleInfo.upvotes,\n    setArticleInfo: setArticleInfo,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }), article.content.map((paragraph, key) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }\n  }, paragraph)), /*#__PURE__*/React.createElement(CommentsList, {\n    comments: articleInfo.comments,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(AddCommentForm, {\n    articleName: name,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, \"Other Articles:\"), /*#__PURE__*/React.createElement(ArticlesList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ArticlePage;","map":{"version":3,"sources":["/Users/georgeciurescu/Projects/React/my-blog/my-blog-frontend/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","ArticlesList","CommentsList","AddCommentForm","UpvotesSection","NotFoundPage","articleContent","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","console","log","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,cAAP,MAA2B,8BAA3B;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAOC,cAAP,MAA2B,mBAA3B;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGL,cAAc,CAACM,IAAf,CAAqBD,OAAD,IAAaA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCf,QAAQ,CAAC;AAAEgB,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEAhB,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMiB,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,iBAAgBV,IAAK,EAAvB,CAA1B;AACA,YAAMW,IAAI,GAAG,MAAMF,MAAM,CAACG,IAAP,EAAnB;AACAC,MAAAA,OAAO,CAACC,GAAR,CAAYH,IAAZ;AACAN,MAAAA,cAAc,CAACM,IAAD,CAAd;AACD,KALD;;AAMAH,IAAAA,SAAS;AACV,GARQ,EAQN,CAACR,IAAD,CARM,CAAT;AAUA,MAAI,CAACE,OAAL,EAAc,oBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEd,QAAMa,aAAa,GAAGlB,cAAc,CAACmB,MAAf,CACnBd,OAAD,IAAaA,OAAO,CAACF,IAAR,KAAiBA,IADV,CAAtB;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAO,CAACe,KAAb,CADF,eAEE,oBAAC,cAAD;AACE,IAAA,WAAW,EAAEjB,IADf;AAEE,IAAA,OAAO,EAAEI,WAAW,CAACE,OAFvB;AAGE,IAAA,cAAc,EAAED,cAHlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAOGH,OAAO,CAACgB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACnB;AAAG,IAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,SAAd,CADD,CAPH,eAUE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEhB,WAAW,CAACG,QAApC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAVF,eAWE,oBAAC,cAAD;AAAgB,IAAA,WAAW,EAAEP,IAA7B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXF,eAYE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBAZF,eAaE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEe,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CADF;AAiBD,CAvCD;;AAyCA,eAAejB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport ArticlesList from \"../components/ArticlesList\";\nimport CommentsList from \"../components/CommentsList\";\nimport AddCommentForm from \"../components/AddCommentForm\";\nimport UpvotesSection from \"../components/UpvotesSection\";\nimport NotFoundPage from \"./NotFoundPage\";\nimport articleContent from \"./article-content\";\n\nconst ArticlePage = ({ match }) => {\n  const name = match.params.name;\n  const article = articleContent.find((article) => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`/api/articles/${name}`);\n      const body = await result.json();\n      console.log(body);\n      setArticleInfo(body);\n    };\n    fetchData();\n  }, [name]);\n\n  if (!article) return <NotFoundPage />;\n\n  const otherArticles = articleContent.filter(\n    (article) => article.name !== name\n  );\n\n  return (\n    <>\n      <h1>{article.title}</h1>\n      <UpvotesSection\n        articleName={name}\n        upvotes={articleInfo.upvotes}\n        setArticleInfo={setArticleInfo}\n      />\n      {article.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      ))}\n      <CommentsList comments={articleInfo.comments} />\n      <AddCommentForm articleName={name} />\n      <h3>Other Articles:</h3>\n      <ArticlesList articles={otherArticles} />\n    </>\n  );\n};\n\nexport default ArticlePage;\n"]},"metadata":{},"sourceType":"module"}