{"ast":null,"code":"var _jsxFileName = \"/Users/georgeciurescu/Projects/React/my-blog/my-blog-frontend/src/pages/ArticlePage.js\";\nimport React, { useState, useEffect } from \"react\";\nimport articleContent from \"./article-content\";\nimport ArticlesList from \"../components/ArticlesList\";\nimport NotFoundPage from \"./NotFoundPage\";\n\nconst ArticlePage = ({\n  match\n}) => {\n  const name = match.params.name;\n  const article = articleContent.find(article => article.name === name);\n  const [articleInfo, setArticleInfo] = useState({\n    upvotes: 0,\n    comments: []\n  });\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`http://localhost:8000/api/articles/${name}`);\n      const body = result.json();\n    };\n\n    fetchData();\n    setArticleInfo({\n      upvotes: Math.ceil(Math.random() * 10)\n    });\n  }, [name]);\n  if (!article) return /*#__PURE__*/React.createElement(NotFoundPage, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 24\n    }\n  });\n  const otherArticles = articleContent.filter(article => article.name !== name);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }\n  }, article.title), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }\n  }, \"This post has been upvoted\", articleInfo.upvotes, \" times\"), article.content.map((paragraph, key) => /*#__PURE__*/React.createElement(\"p\", {\n    key: key,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, paragraph)), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, \"Other Articles:\"), /*#__PURE__*/React.createElement(ArticlesList, {\n    articles: otherArticles,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }));\n};\n\nexport default ArticlePage;","map":{"version":3,"sources":["/Users/georgeciurescu/Projects/React/my-blog/my-blog-frontend/src/pages/ArticlePage.js"],"names":["React","useState","useEffect","articleContent","ArticlesList","NotFoundPage","ArticlePage","match","name","params","article","find","articleInfo","setArticleInfo","upvotes","comments","fetchData","result","fetch","body","json","Math","ceil","random","otherArticles","filter","title","content","map","paragraph","key"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,cAAP,MAA2B,mBAA3B;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;;AAEA,MAAMC,WAAW,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAe;AACjC,QAAMC,IAAI,GAAGD,KAAK,CAACE,MAAN,CAAaD,IAA1B;AACA,QAAME,OAAO,GAAGP,cAAc,CAACQ,IAAf,CAAqBD,OAAD,IAAaA,OAAO,CAACF,IAAR,KAAiBA,IAAlD,CAAhB;AAEA,QAAM,CAACI,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAC;AAAEa,IAAAA,OAAO,EAAE,CAAX;AAAcC,IAAAA,QAAQ,EAAE;AAAxB,GAAD,CAA9C;AAEAb,EAAAA,SAAS,CAAC,MAAM;AACd,UAAMc,SAAS,GAAG,YAAY;AAC5B,YAAMC,MAAM,GAAG,MAAMC,KAAK,CAAE,sCAAqCV,IAAK,EAA5C,CAA1B;AACA,YAAMW,IAAI,GAAGF,MAAM,CAACG,IAAP,EAAb;AACD,KAHD;;AAIAJ,IAAAA,SAAS;AACTH,IAAAA,cAAc,CAAC;AAAEC,MAAAA,OAAO,EAAEO,IAAI,CAACC,IAAL,CAAUD,IAAI,CAACE,MAAL,KAAgB,EAA1B;AAAX,KAAD,CAAd;AACD,GAPQ,EAON,CAACf,IAAD,CAPM,CAAT;AASA,MAAI,CAACE,OAAL,EAAc,oBAAO,oBAAC,YAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAP;AAEd,QAAMc,aAAa,GAAGrB,cAAc,CAACsB,MAAf,CACnBf,OAAD,IAAaA,OAAO,CAACF,IAAR,KAAiBA,IADV,CAAtB;AAIA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKE,OAAO,CAACgB,KAAb,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,mCAA8Bd,WAAW,CAACE,OAA1C,WAFF,EAGGJ,OAAO,CAACiB,OAAR,CAAgBC,GAAhB,CAAoB,CAACC,SAAD,EAAYC,GAAZ,kBACnB;AAAG,IAAA,GAAG,EAAEA,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAcD,SAAd,CADD,CAHH,eAME;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,uBANF,eAOE,oBAAC,YAAD;AAAc,IAAA,QAAQ,EAAEL,aAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAPF,CADF;AAWD,CAhCD;;AAkCA,eAAelB,WAAf","sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport articleContent from \"./article-content\";\nimport ArticlesList from \"../components/ArticlesList\";\nimport NotFoundPage from \"./NotFoundPage\";\n\nconst ArticlePage = ({ match }) => {\n  const name = match.params.name;\n  const article = articleContent.find((article) => article.name === name);\n\n  const [articleInfo, setArticleInfo] = useState({ upvotes: 0, comments: [] });\n\n  useEffect(() => {\n    const fetchData = async () => {\n      const result = await fetch(`http://localhost:8000/api/articles/${name}`);\n      const body = result.json();\n    };\n    fetchData();\n    setArticleInfo({ upvotes: Math.ceil(Math.random() * 10) });\n  }, [name]);\n\n  if (!article) return <NotFoundPage />;\n\n  const otherArticles = articleContent.filter(\n    (article) => article.name !== name\n  );\n\n  return (\n    <>\n      <h1>{article.title}</h1>\n      <p>This post has been upvoted{articleInfo.upvotes} times</p>\n      {article.content.map((paragraph, key) => (\n        <p key={key}>{paragraph}</p>\n      ))}\n      <h3>Other Articles:</h3>\n      <ArticlesList articles={otherArticles} />\n    </>\n  );\n};\n\nexport default ArticlePage;\n"]},"metadata":{},"sourceType":"module"}